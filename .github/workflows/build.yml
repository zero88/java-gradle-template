name: build-release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yml'
      - '*.md'
      - 'LICENSE'
      - 'webdocs/**'
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
    branches: [ main ]
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yml'
      - '*.md'
      - 'LICENSE'
      - 'webdocs/**'

jobs:
  context:
    uses: zero88/shared-ghactions/.github/workflows/project-context.yml@main
    with:
      profile: ${{ env.PROFILE }}
    secrets:
      githubToken: ${{ secrets.OSS_GITHUB_TOKEN }}
      gpgKey: ${{ secrets.CI_GPG_PRIVATE_KEY }}
      gpgPassphrase: ${{ secrets.CI_GPG_PASSPHARSE }}

  build:
    uses: zero88/shared-ghactions/.github/workflows/gradle-build.yml@main
    needs: context
    if: needs.context.outputs.shouldBuild == 'true'
    with:
      profile: 'ciBuild'
      version: ${{ needs.context.outputs.version }}
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      hashVersion: ${{ needs.context.outputs.commitId }}

  analysis:
    uses: zero88/shared-ghactions/.github/workflows/gradle-analysis.yml@main
    needs: [ context, build ]
    if: needs.context.outputs.shouldBuild == 'true'
    with:
      profile: 'ciSonar'
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      branch: ${{ needs.context.outputs.branch }}
    secrets:
      githubToken: ${{ secrets.OSS_GITHUB_TOKEN }}
      sonarToken: ${{ secrets.OSS_SONARQUBE_TOKEN }}

  docs:
    uses: zero88/shared-ghactions/.github/workflows/antora-docs-async.yml@main
    needs: [ context, build ]
    if: needs.context.outputs.shouldPublish == 'disabled' || needs.context.outputs.isRelease == 'disabled'
    with:
      profile: ${{ env.PROFILE }}
      version: ${{ needs.context.outputs.version }}
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      hashVersion: ${{ needs.context.outputs.commitId }}
      sha: ${{ needs.context.outputs.sha }}
      isRelease: ${{ needs.context.outputs.isRelease }}
    secrets:
      githubToken: ${{ secrets.OSS_GITHUB_TOKEN }}

  publish:
    uses: zero88/shared-ghactions/.github/workflows/gradle-publish.yml@main
    needs: [ context, build, analysis ]
    if: needs.context.outputs.shouldPublish == 'true' || needs.context.outputs.isRelease == 'true'
    with:
      profile: ${{ env.PROFILE }}
      version: ${{ needs.context.outputs.version }}
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      hashVersion: ${{ needs.context.outputs.commitId }}
      isRelease: ${{ needs.context.outputs.isRelease }}
    secrets:
      ossrhUser: ${{ secrets.OSS_SONATYPE_USER }}
      ossrhToken: ${{ secrets.OSS_SONATYPE_PASSWORD }}
      gpgKey: ${{ secrets.CI_GPG_PRIVATE_KEY }}
      gpgPassphrase: ${{ secrets.CI_GPG_PASSPHARSE }}

  release:
    runs-on: ubuntu-latest
    needs: [ context, publish, docs ]
    if: needs.context.outputs.isRelease == 'true'
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ env.PROFILE }} ${{ needs.context.outputs.version }}
          tag_name: ${{ needs.context.outputs.branch }}
          generate_release_notes: true
